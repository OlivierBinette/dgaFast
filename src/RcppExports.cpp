// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// computeML
NumericVector computeML(const NumericMatrix& compMat, const IntegerVector& decC, const IntegerVector& decS, const NumericVector& denominator);
RcppExport SEXP _dga_computeML(SEXP compMatSEXP, SEXP decCSEXP, SEXP decSSEXP, SEXP denominatorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type compMat(compMatSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type decC(decCSEXP);
    Rcpp::traits::input_parameter< const IntegerVector& >::type decS(decSSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type denominator(denominatorSEXP);
    rcpp_result_gen = Rcpp::wrap(computeML(compMat, decC, decS, denominator));
    return rcpp_result_gen;
END_RCPP
}
// rowAdd
void rowAdd(NumericMatrix& mat, const NumericVector& vect);
RcppExport SEXP _dga_rowAdd(SEXP matSEXP, SEXP vectSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type mat(matSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type vect(vectSEXP);
    rowAdd(mat, vect);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dga_computeML", (DL_FUNC) &_dga_computeML, 4},
    {"_dga_rowAdd", (DL_FUNC) &_dga_rowAdd, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_dga(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
